def format_duration(seconds):
    # გამოვთვალოთ წლები
    years = seconds // (365 * 24 * 60 * 60)
    # გამოვთვალოთ დარჩენილი დღეები წლების გამოკლების შემდეგ
    days = (seconds % (365 * 24 * 60 * 60)) // (24 * 60 * 60)
    # გამოვთვალოთ დარჩენილი საათები დღეების გამოკლების შემდეგ
    hours = (seconds % (365 * 24 * 60 * 60)) % (24 * 60 * 60) // (60 * 60)
    # გამოვთვალოთ დარჩენილი წუთები საათების გამოკლების შემდეგ
    minutes = ((seconds % (365 * 24 * 60 * 60)) % (24 * 60 * 60) % (60 * 60)) // 60
    # ბოლოს დარჩენილი წამები
    seconds = (((seconds % (365 * 24 * 60 * 60)) % (24 * 60 * 60) % (60 * 60))) % 60
    
    # ვქმნით ლექსიკონს, სადაც თითოეული ერთეული შეესაბამება შესაბამის მნიშვნელობას
    my_dict = {
        'years': years,
        'days': days,
        'hours': hours,
        'minutes': minutes,
        'seconds': seconds
    }

    listn = []  # ეს სიაში შეინახება საბოლოო ფორმატირებული ელემენტები, ჯერ ციფრებით და სახელებით

    # გავივლით ლექსიკონს და დავამატებთ მნიშვნელობებს
    for key, value in my_dict.items():
        if value == 1:
            # თუ მნიშვნელობა 1-ია, ვწერთ სიტყვას სინგულარულ ფორმაში (მაგ. year)
            listn.append(value)
            listn.append(key[:-1])  # ვშლით 's'-ს ბოლოდან
        elif value == 0:
            # თუ მნიშვნელობა 0-ია, არ ვამატებთ საერთოდ
            pass
        else:
            # თუ მნიშვნელობა მეტია 1-ზე, ვტოვებთ მრავლობით ფორმაში (მაგ. years)
            listn.append(value)
            listn.append(key)

    # თუ სიაში არაფერია (ანუ ყველა მნიშვნელობა იყო 0), ვაბრუნებთ "now"
    if listn == []:
        return "now"
    else:
        z = 0
        listm = []
        # აქ გავაერთიანებთ ციფრს და მის შესაბამის ერთეულს (მაგ: 2 days)
        while z < len(listn):
            listm.append(str(listn[z]) + " " + str(listn[z+1]))
            z += 2

        # listm არის უკვე ['2 years', '5 days', ...] ფორმატში
        # ბოლო ორი ელემენტის ერთმანეთზე გადაბმა "and"-ით, დანარჩენების ", " სეპარაციით
        lstn = ", ".join(listm[:-2]) + ", "  # ბოლო ორის გარდა
        lstm = " and ".join(listm[-2:])      # ბოლო ორი

        # თუ მხოლოდ ორი ელემენტი იყო, თავიდან ემატება ", ", რაც ზედმეტია — ვშლით
        if ", " == lstn[0:2]:
            lstn = lstn[2:]

        return lstn + lstm  # ვაბრუნებთ სრულად ფორმატირებულ ტექსტს

#code wars gavakete